/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vinatek.utils.utilities.EcgFilter;

public class AdvancedFilter_Work {
    public static final double[] coeffs = new double[] { -0.01291557043769433,-0.011719684286055968,-0.01054574099958528,-0.00939374057828227,-0.008263683022146934,-0.007155568331179276,
        -0.006069396505379295,-0.0050051675447469884,-0.003962881449282359,-0.0029425382189854077,-0.0019441378538561302,-9.676803538945303E-4,
        -1.3165719100604462E-5,9.194060505256403E-4,0.001830034954984211,0.0027187209942751075,0.003585464168398323,0.004430264477353868,
        0.005253121921141732,0.00605403649976192,0.006833008213214434,0.007590037061499268,0.008325123044616429,0.009038266162565912,
        0.009729466415347719,0.010398723802961848,0.011046038325408304,0.01167140998268708,0.012274838774798182,0.012856324701741606,
        0.013415867763517355,0.013953467960125428,0.014469125291565823,0.01496283975783854,0.015434611358943584,0.01588444009488095,
        0.016312325965650642,0.016718268971252653,0.01710226911168699,0.017464326386953652,0.017804440797052637,0.018122612341983944,
        0.018418841021747574,0.01869312683634353,0.018945469785771808,0.019175869870032412,0.01938432708912534,0.019570841443050588,
        0.01973541293180816,0.019878041555398056,0.019998727313820276,0.020097470207074822,0.02017427023516169,0.02022912739808088,
        0.020262041695832393,0.020273013128416232,0.020262041695832393,0.02022912739808088,0.02017427023516169,0.020097470207074822,
        0.019998727313820276,0.019878041555398056,0.01973541293180816,0.019570841443050588,0.01938432708912534,0.019175869870032412,
        0.018945469785771808,0.01869312683634353,0.018418841021747574,0.018122612341983944,0.017804440797052637,0.017464326386953652,
        0.01710226911168699,0.016718268971252653,0.016312325965650642,0.01588444009488095,0.015434611358943584,0.01496283975783854,
        0.014469125291565823,0.013953467960125428,0.013415867763517355,0.012856324701741606,0.012274838774798182,0.01167140998268708,
        0.011046038325408304,0.010398723802961848,0.009729466415347719,0.009038266162565912,0.008325123044616429,0.007590037061499268,
        0.006833008213214434,0.00605403649976192,0.005253121921141732,0.004430264477353868,0.003585464168398323,0.0027187209942751075,
        0.001830034954984211,9.194060505256403E-4,-1.3165719100604462E-5,-9.676803538945303E-4,-0.0019441378538561302,-0.0029425382189854077,
        -0.003962881449282359,-0.0050051675447469884,-0.006069396505379295,-0.007155568331179276,-0.008263683022146934,-0.00939374057828227,
        -0.01054574099958528,-0.011719684286055968,-0.01291557043769433};
    
    public static final double[] coeffsPeak = new double[] { -0.01291557043769433,-0.011719684286055968,-0.01054574099958528,
        -0.00939374057828227,-0.008263683022146934,-0.007155568331179276,-0.006069396505379295,-0.0050051675447469884,-0.003962881449282359,
        -0.0029425382189854077,-0.0019441378538561302,-9.676803538945303E-4,-1.3165719100604462E-5,9.194060505256403E-4,0.001830034954984211,
        0.0027187209942751075,0.003585464168398323,0.004430264477353868,0.005253121921141732,0.00605403649976192,0.006833008213214434,
        0.007590037061499268,0.008325123044616429,0.009038266162565912,0.009729466415347719,0.010398723802961848,0.011046038325408304,
        0.01167140998268708,0.012274838774798182,0.012856324701741606,0.013415867763517355,0.013953467960125428,0.014469125291565823,
        0.01496283975783854,0.015434611358943584,0.01588444009488095,0.016312325965650642,0.016718268971252653,0.01710226911168699,
        0.017464326386953652,0.017804440797052637,0.018122612341983944,0.018418841021747574,0.01869312683634353,0.018945469785771808,
        0.019175869870032412,0.01938432708912534,0.019570841443050588,0.01973541293180816,0.019878041555398056,0.019998727313820276,
        0.020097470207074822,0.02017427023516169,0.02022912739808088,0.020262041695832393,0.020273013128416232,0.020262041695832393,
        0.02022912739808088,0.02017427023516169,0.020097470207074822,0.019998727313820276,0.019878041555398056,0.01973541293180816,
        0.019570841443050588,0.01938432708912534,0.019175869870032412,0.018945469785771808,0.01869312683634353,0.018418841021747574,
        0.018122612341983944,0.017804440797052637,0.017464326386953652,0.01710226911168699,0.016718268971252653,0.016312325965650642,
        0.01588444009488095,0.015434611358943584,0.01496283975783854,0.014469125291565823,0.013953467960125428,0.013415867763517355,
        0.012856324701741606,0.012274838774798182,0.01167140998268708,0.011046038325408304,0.010398723802961848,0.009729466415347719,
        0.009038266162565912,0.008325123044616429,0.007590037061499268,0.006833008213214434,0.00605403649976192,0.005253121921141732,
        0.004430264477353868,0.003585464168398323,0.0027187209942751075,0.001830034954984211,9.194060505256403E-4,-1.3165719100604462E-5,
        -9.676803538945303E-4,-0.0019441378538561302,-0.0029425382189854077,-0.003962881449282359,-0.0050051675447469884,
        -0.006069396505379295,-0.007155568331179276,-0.008263683022146934,-0.00939374057828227,-0.01054574099958528,
        -0.011719684286055968,-0.01291557043769433};
    
    public static float[] GetAdvFilterData(String url, String apiURL, String token) throws Exception
    {
        QrsDetectorModel dataExec = Qrs_Detector.DetectQRS(url,apiURL,token);

        int[] heartBeatIndicatorPositionInArray = dataExec.position;
        float[] smoothedScaledSignal = dataExec.data;
        float[] leftPad = new float[55];
        for (int i = 0; i < leftPad.length; i++)
        {
            leftPad[i] = 128;
        }
        ContinuousPadder padder1 = new ContinuousPadder();
        SGFilter sgFilter = new SGFilter(55, 55);
        float[] enhancedFilteredSignal = sgFilter.smooth(smoothedScaledSignal, leftPad, new float[0], coeffs);
        float[] enhancedFilteredSignalForPeaks = sgFilter.smooth(smoothedScaledSignal, leftPad, new float[0], coeffsPeak);

        for (int iii = 0; iii < heartBeatIndicatorPositionInArray.length; iii++)
        {
            if (heartBeatIndicatorPositionInArray[iii] > 0)
            {
                enhancedFilteredSignal = Advanced_Filter.ImprovingPeak(iii, smoothedScaledSignal, enhancedFilteredSignal, enhancedFilteredSignalForPeaks);
            }
        }
        return enhancedFilteredSignal;
    }
    public static float[] GetAdvFilterFromData(int[] data) throws Exception
    {
        QrsDetectorModel dataExec = Qrs_Detector.DetectQRSFromData(data);

        int[] heartBeatIndicatorPositionInArray = dataExec.position;
        float[] smoothedScaledSignal = dataExec.data;
        float[] leftPad = new float[55];
        for (int i = 0; i < leftPad.length; i++)
        {
            leftPad[i] = 128;
        }
        ContinuousPadder padder1 = new ContinuousPadder();
        SGFilter sgFilter = new SGFilter(55, 55);
        float[] enhancedFilteredSignal = sgFilter.smooth(smoothedScaledSignal, leftPad, new float[0], coeffs);
        float[] enhancedFilteredSignalForPeaks = sgFilter.smooth(smoothedScaledSignal, leftPad, new float[0], coeffsPeak);

        for (int iii = 0; iii < heartBeatIndicatorPositionInArray.length; iii++)
        {
            if (heartBeatIndicatorPositionInArray[iii] > 0)
            {
                enhancedFilteredSignal = Advanced_Filter.ImprovingPeak(iii, smoothedScaledSignal, enhancedFilteredSignal, enhancedFilteredSignalForPeaks);
            }
        }
        return enhancedFilteredSignal;
    }
}